<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.leoyon.vote.user.dao.SysUserDao">
	
	<sql id="SelectColumns">
		id,username,active,real_name,depart,phone,date_create,last_login_time,last_login_ip
	</sql>
	
	<insert id="addUser" parameterType="com.leoyon.vote.user.SysUser" useGeneratedKeys="true" keyProperty="id">
		insert into sys_user (username,password,salt,active,real_name,depart,phone,`update_uid`) values(
			#{username},#{password},#{salt},#{active},#{realName},#{depart},#{phone},#{updateUid}
		);
	</insert>
	
	<update id="updateUser" parameterType="com.leoyon.vote.user.SysUser">
	update sys_user
	<set>
		<if test="username != null">
				username = #{username},
		</if>
		<if test="password != null">
				password = #{password},
		</if>	
		<if test="active != null">
				active = #{active},
		</if>		
		<if test="realName != null">
				real_name = #{realName},
		</if>			
		<if test="depart != null">
				depart = #{depart},
		</if>					
		<if test="phone != null">
				phone = #{phone},
		</if>		
		<if test="updateUid != null">
				update_uid=#{updateUid},
		</if>							
	</set>
	where id = #{id}
	</update>
	
	<update id="delete" parameterType="com.leoyon.vote.user.SysUser">
	update sys_user set `delete`=2,update_uid=#{updateUid} where id = #{id};
	</update>
	
	<select id="getUser" parameterType="String" resultType="com.leoyon.vote.user.SysUser">
		select * from sys_user where username=#{username} and active=1;
	</select>
	
	<select id="getUserById" parameterType="Long" resultType="com.leoyon.vote.user.SysUser">
		select <include refid="SelectColumns"/> from sys_user where id=#{id} and active=1;
	</select>	
	
	<select id="findUser" parameterType="com.leoyon.vote.user.FindSysUserRequest" resultType="com.leoyon.vote.user.FindSysUserResponse">
		select <include refid="SelectColumns"/> from sys_user 
		<where>
			<if test="q != null and q !=''">
				and (username like '%${q}%' or real_name like '%${q}%') 
			</if>
			<if test="active != null">
				and active=#{active}
			</if>		
			and `delete`=1	
		</where>
		order by date_create desc
		LIMIT #{page} , #{psize};
	</select>

	<select id="count" parameterType="com.leoyon.vote.user.FindSysUserRequest" resultType="Integer">
		select count(*) from sys_user 
		<where>
			<if test="q != null and q !=''">
				and (username like '%${q}%' or real_name like '%${q}%') 
			</if>
			<if test="active != null">
				and active=#{active}
			</if>		
			and `delete`=1	
		</where>
	</select>
	
</mapper>
